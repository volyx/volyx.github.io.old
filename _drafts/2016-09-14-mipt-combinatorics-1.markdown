---
layout:     post
title:      Сколько чисел от 1 до 9999 не имеют одинаковых подряд идущих цифр?
date:       2016-09-12
categories: mipt
---

В курсе Комбинаторика возникли проблемы с этой задачей. Не смог решить аналитически, пришлось писать простейшую программку.

Аналичтиески, я додумался что чисел "без потвторений" > 10*9*9*9 = 7290. А вот как исключить числа с началом равным 0 не додумался. 

Задача 1

Сколько чисел от 1 до 9999 (включая 1 и 9999) не имеют в своей десятичной записи одинаковых подряд идущих цифр? (к примеру, не подходят 1488, 2259, 3233)

{% highlight groovy %}

def j = 0
def b = new ArrayList<Integer>()
for (def i = 1; i < 10000; i++) {
//def i = 2245   
    int[] a = new int[4]   
    a[0] = i / 1000 
    a[1] = i / 100  -  a[0]*10
    a[2] = i / 10 - a[0] * 100 - a[1]*10
    a[3] = i - a[0] * 1000 - a[1]*100 - a[2]*10
    
    for (int k = 0 ; k < 3; k++) {
        
        if (a[k] == a[k+1] ) {
        
            if (a[k] == 0) {
                if (k == 0) {
                    continue
                }
                if (k == 1 && (a[0] == 0)) {
                    continue
                }
            }
            
            j++
            b.add(i)
            break;
        } else {
            
        }
    
    }
    
}

println("j=${9999 - j}")

{% endhighlight %}

Задача 2

Найдите количество упорядоченных разбиений числа 10 на 4 неотрицательных слагаемых. К примеру, есть пять разбиений числа 4 на 2 неотрицательных слагаемых: 4+0, 3+1, 2+2, 1+3, 0+4.

{% highlight groovy %}

def y = 0;

for (int i=0; i<=10; i++) {
    for (int j=0; j <= 10; j++) {
        for (int k = 0; k<= 10; k++) {
            for (int n = 0; n<=10; n++) {
                if ((i + j + k + n) == 10) {
                    y++;
                    println("${i},${j},${k},${n}")
                }
            }
        }
    }
}
println("${y}")

{% endhighlight %}